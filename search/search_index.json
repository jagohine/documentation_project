{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>This site is a practical tutorial on how to perform three useful tasks in Google Sheets. Each task walks you through a short, self-contained project. You\u2019ll learn how to build a personal budget tracker, a conditional to-do list, and a shared resource index that updates live from multiple contributors.</p>"},{"location":"#intended-reader","title":"Intended Reader","text":"<p>This guide is for anyone curious about the basics of Google Sheets. No prior spreadsheet experience is required, but general computer literacy is assumed.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>To complete the tasks in this guide, you will need:</p> <ul> <li>A Google Account (to access and save Google Sheets)</li> <li>Basic familiarity with the concept of a spreadsheet (cells, rows, columns)</li> <li>A modern web browser and internet connection</li> </ul>"},{"location":"#tasks-in-this-guide","title":"Tasks in this guide","text":"<ul> <li> <p>Task 1 \u2013 Build a Personal Budget Tracker   Create a simple expense tracking sheet with automatic totals, a pie chart, and category dropdowns.</p> </li> <li> <p>Task 2 \u2013 Create a To-Do Tracker with Conditional Highlights   Build a functional task list with date-based formatting to flag overdue and upcoming work.</p> </li> <li> <p>Task 3 \u2013 Merge Contributor Sheets into a Searchable Resource Index   Import data from multiple source spreadsheets, merge them, and create a searchable front end.</p> </li> </ul>"},{"location":"#reference","title":"Reference","text":"<ul> <li> <p>Glossary   Definitions for terms used throughout the guide.</p> </li> <li> <p>Troubleshooting Guide   Common problems and how to fix them.</p> </li> </ul>"},{"location":"#conventions-used","title":"Conventions Used","text":"<p>Throughout this guide, we follow a few formatting rules to support clarity and consistency:</p> <ul> <li>Menu items and interface labels are written in <code>code style</code>, such as <code>Data &gt; Data validation</code>.</li> <li>Formulas are always shown in preformatted blocks like this:   <pre><code>=SUM(D2:D)\n</code></pre></li> <li>GIFs demonstrate each step visually.</li> <li>Admonitions are used to highlight specific types of content:</li> </ul> <p>Tip</p> <p>A tip admonition like this offers helpful or optional guidance.</p> <p>Warning</p> <p>A warning admonition like this alerts the reader to a possible difficulty or common mistake.</p> <p>Note</p> <p>Notes like this explain something important that doesn\u2019t fit in the main instruction line.</p>"},{"location":"#about-this-project","title":"About This Project","text":"<p>This guide was created by Jago Hine and Jasrajan Sidhu as part of a CST technical documentation assignment. </p>"},{"location":"glossary/","title":"Glossary","text":"<p>A reference list of important terms used throughout the tutorial. </p> <p>Active Cell The currently selected cell in a spreadsheet. It is highlighted and ready to receive input.</p> <p>Array Formula A formula that can return multiple values or process a range of cells at once. Often used with functions like <code>QUERY</code>, <code>FILTER</code>, or <code>{ ... }</code> stacking.</p> <p>Cell Range A group of adjacent cells defined by a start and end point, such as <code>A2:D10</code>.</p> <p>Chart Editor A sidebar tool in Google Sheets used to customize and format charts (e.g. pie, bar, column).</p> <p>Conditional Formatting A feature that changes the appearance of cells automatically based on their values. Often used to highlight overdue dates or incomplete tasks.</p> <p>Data Validation A way to restrict what values a user can enter in a cell. Commonly used to create dropdown lists.</p> <p>Dropdown List A menu that lets users pick from a predefined list of values inside a cell.</p> <p>Freeze Row/Column Locks a row or column in place so it stays visible while you scroll. Often used to keep headers visible.</p> <p>Function A built-in operation in Google Sheets that performs calculations or logic. Examples: <code>SUM</code>, <code>FILTER</code>, <code>TODAY</code>.</p> <p>Header Row The first row in a table, typically containing column titles. Often frozen and protected.</p> <p>IMPORTRANGE A function used to bring in data from a different spreadsheet using its URL.</p> <p>Logical Formula A formula that uses functions like <code>AND</code>, <code>OR</code>, and comparison operators to return <code>TRUE</code> or <code>FALSE</code>.</p> <p>Merged Table A combined dataset from multiple sources, usually built with <code>{Sheet1!A2:D; Sheet2!A2:D}</code> and cleaned with <code>QUERY</code>.</p> <p>Pie Chart A circular chart that shows proportions as slices. Useful for showing how expenses or categories are distributed.</p> <p>Protect Range A feature that limits who can edit specific cells, helping prevent accidental changes to important formulas or headers.</p> <p>QUERY A flexible function that allows SQL-like queries on a range. Useful for filtering or combining data.</p> <p>SEARCH A function that looks for a substring inside a text string and returns the position if found, or an error if not.</p> <p>SUM A function that adds together numeric values. Example: <code>=SUM(D2:D)</code>.</p> <p>SUMIF A function that adds values that match a specific condition. Example: <code>=SUMIF(C2:C, \"Food\", D2:D)</code>.</p> <p>TODAY A function that returns the current date. Automatically updates each day.</p> <p>Toolbar The row of buttons at the top of Google Sheets used to apply formatting, insert charts, and access tools.</p>"},{"location":"task1/","title":"Task 1: Build a Personal Budget Tracker with Automatic Totals","text":"<p>This task walks you through building a personal budget tracker using Google Sheets. By the end of this task, you'll have a working sheet that records your expenses, categorizes them, calculates totals, and shows a pie chart of where your money goes.</p>"},{"location":"task1/#1-create-a-new-google-sheet","title":"1 \u2013 Create a new Google Sheet","text":"<p>Open Google Sheets and create a new blank spreadsheet. Give it a meaningful title like <code>My Budget Tracker</code>.</p> <p></p>"},{"location":"task1/#2-set-up-your-columns","title":"2 \u2013 Set up your columns","text":"<p>In Row 1, enter the following headers:</p> <pre><code>Date | Description | Category | Amount\n</code></pre> <p>These will be the core of your budget log.</p> <p></p>"},{"location":"task1/#3-format-the-amount-column-as-currency","title":"3 \u2013 Format the \"Amount\" column as currency","text":"<p>Select the \"Amount\" column (column D), then go to <code>Format &gt; Number &gt; Currency</code> to ensure all amounts display as dollars.</p> <p></p>"},{"location":"task1/#4-add-a-dropdown-list-for-your-category-column","title":"4 \u2013 Add a dropdown list for your \"Category\" column","text":"<p>Use data validation to keep categories consistent. First select column C. Then go to <code>Data &gt; Data validation</code>. Finally, choose <code>List of items</code> and enter something like: <pre><code>Food, Rent, Utilities, Entertainment, Transportation, Other\n</code></pre> After entering your categories, click <code>Done</code>.</p> <p>Tip</p> <p>You can add or edit these categories later, but be consistent with spelling to avoid filtering issues.</p> <p></p>"},{"location":"task1/#5-add-a-total-sum","title":"5 \u2013 Add a total sum","text":"<p>Below the \"Amount\" column, enter: <pre><code>=SUM(D2:D)\n</code></pre> This will add up all your recorded expenses.</p> <p></p>"},{"location":"task1/#6-add-a-total-for-a-specific-category-such-as-food","title":"6 \u2013 Add a total for a specific category (such as \"Food\")","text":"<p>In an empty cell, use: <pre><code>=SUMIF(C2:C, \"Food\", D2:D)\n</code></pre> This will total only the amounts labeled \"Food\".</p> <p>Warning</p> <p>Category names in the formula must exactly match what's in your dropdown list.</p> <p></p>"},{"location":"task1/#7-insert-a-pie-chart","title":"7 \u2013 Insert a pie chart","text":"<p>Go to <code>Insert &gt; Chart</code>, then in the <code>Chart editor</code> on the right hand side, choose <code>C2:C</code> as the label and <code>D2:D</code> as the data range.</p> <p></p>"},{"location":"task1/#8-lock-the-header-row","title":"8 \u2013 Lock the header row","text":"<p>Go to <code>View &gt; Freeze &gt; 1 row</code>.</p> <p>This keeps your headers visible as you scroll.</p> <p></p>"},{"location":"task1/#what-youve-built","title":"What you\u2019ve built","text":"<p>You now have a working personal budget tracker which </p> <ul> <li>is easy to fill out and update</li> <li>sums your expenses</li> <li>contains a pie chart for visualizing sources of expense</li> </ul> <p>This tracker can be expanded later with things like monthly filters, savings goals, or automatic formatting.</p> <p>Tip</p> <p>Want to reuse this sheet? Make a copy and clear out the rows \u2014 the formulas and dropdowns will still work.</p>"},{"location":"task2/","title":"Task 2: Create a To-Do Tracker with Conditional Highlights","text":"<p>In this task, you'll create a simple to-do tracker that uses conditional formatting to visually flag urgent or overdue tasks. You'll also learn how to lock important parts of the sheet and add filters for easier use.</p>"},{"location":"task2/#1-create-a-new-google-sheet","title":"1 \u2013 Create a new Google Sheet","text":"<p>Open Google Sheets and start a new blank spreadsheet. Give it a name like <code>To-Do Tracker</code>.</p> <p></p>"},{"location":"task2/#2-add-columns","title":"2 \u2013 Add columns","text":"<p>In Row 1, add the following column headers:</p> <pre><code>Task | Due Date | Status\n</code></pre> <p></p>"},{"location":"task2/#3-format-the-due-date-column","title":"3 \u2013 Format the \"Due Date\" column","text":"<p>Select the \"Due Date\" column (Column B), then go to <code>Format &gt; Number &gt; Date</code>.</p> <p></p>"},{"location":"task2/#4-add-a-dropdown-list-for-the-status-column","title":"4 \u2013 Add a dropdown list for the \"Status\" column","text":"<p>Select column C. Go to <code>Data &gt; Data validation</code>, choose <code>List of items</code>, and enter: <pre><code>Completed, In progress, Not started\n</code></pre> Then click <code>Done</code>.</p> <p></p>"},{"location":"task2/#5-add-a-todays-date-cell","title":"5 \u2013 Add a \"Today's Date\" cell","text":"<p>Pick an empty cell near the top (e.g., E1), and enter: <pre><code>=TODAY()\n</code></pre> This cell will always hold the current date.</p> <p></p>"},{"location":"task2/#6-add-some-example-tasks","title":"6 \u2013 Add some example tasks","text":"<p>Fill in a few rows with sample tasks to get a better sense of what the sheet will look like in use. </p> <p></p>"},{"location":"task2/#7-highlight-overdue-tasks","title":"7 \u2013 Highlight overdue tasks","text":"<p>Select all of Column B and go to <code>Format &gt; Conditional formatting</code>. Use the following custom formula: <pre><code>=AND(ISDATE(B2), B2 &lt; TODAY(), C2 &lt;&gt; \"Completed\")\n</code></pre> Choose a red background or other clear indicator for overdue items.</p> <p>Warning</p> <p>If your headers are in row 1, make sure your formatting starts at row 2 or the formula may highlight the header.</p> <p></p>"},{"location":"task2/#8-highlight-upcoming-tasks-due-in-3-days-or-fewer","title":"8 \u2013 Highlight upcoming tasks (due in 3 days or fewer)","text":"<p>Add a second rule to the same range with this formula: <pre><code>=AND(ISDATE(B2), B2 - TODAY() &lt;= 3, B2 - TODAY() &gt;= 0, C2 &lt;&gt; \"Completed\")\n</code></pre> This highlights uncompleted items that will be due within the next 3 days.</p> <p></p>"},{"location":"task2/#9-add-a-filter-for-incomplete-tasks","title":"9 \u2013 Add a filter for incomplete tasks","text":"<p>Click the filter icon in the toolbar (or go to <code>Data &gt; Create a filter</code>). Then click the filter dropdown in the \"Status\" column and deselect \"Completed\".</p> <p></p>"},{"location":"task2/#10-protect-the-header-row","title":"10 \u2013 Protect the header row","text":"<p>Select Row 1, right-click, and choose <code>Protect range</code>. Set the permissions to only allow yourself (or selected editors) to change the headers.</p> <p>Note</p> <p>Protecting headers ensures no one accidentally deletes your categories or breaks your formulas.</p> <p></p>"},{"location":"task2/#what-youve-built","title":"What you\u2019ve built","text":"<p>You've now created a lightweight but powerful task tracker that:</p> <ul> <li>visually flags overdue and upcoming tasks</li> <li>allows filtering by task status</li> <li>protects your structure from accidental edits</li> </ul> <p>You can continue to build on this with more columns (e.g. \"Priority\" or \"Assigned to\"), or share it with a team.</p>"},{"location":"task3/","title":"Task 3: Merge Contributor Sheets into a Searchable Resource Index","text":"<p>This task guides you through setting up a system in Google Sheets that imports resources from multiple contributors and combines them into a single, searchable index. You'll use <code>IMPORTRANGE</code>, <code>QUERY</code>, and <code>FILTER</code> to make the data live and filterable.</p>"},{"location":"task3/#1-create-or-open-the-source-sheets","title":"1 \u2013 Create or open the source sheets","text":"<p>Make sure each contributor has their own Google Sheet with consistent columns: <pre><code>Title | Link | Topic | Notes\n</code></pre> Consistency matters. All sheets should use the same column names and order.</p> <p>Warning</p> <p>If columns don't match between source sheets, the merge step will break or produce incorrect results.</p> <p> </p>"},{"location":"task3/#2-create-a-target-sheet","title":"2 \u2013 Create a target sheet","text":"<p>This is where the merged index will live. Create a new Google Sheet and name it something like <code>Resource Index</code>.</p> <p></p>"},{"location":"task3/#3-create-a-sheet-for-the-first-import","title":"3 \u2013 Create a sheet for the first import","text":"<p>Inside your target sheet, add a new sheet tab (e.g. <code>AliceImport</code>). In cell A2, add: <pre><code>=IMPORTRANGE(\"URL_A\", \"Sheet1!A2:D\")\n</code></pre> Replace <code>URL_A</code> with the full URL of the contributor's sheet (without <code>/edit?...</code>). Click \u201cAllow access\u201d when prompted.</p> <p></p>"},{"location":"task3/#4-create-a-sheet-for-the-second-import","title":"4 \u2013 Create a sheet for the second import","text":"<p>Repeat Step 3 in a new tab (e.g. <code>BobImport</code>). Update the formula to: <pre><code>=IMPORTRANGE(\"URL_B\", \"Sheet1!A2:D\")\n</code></pre> Again, click \u201cAllow access\u201d if asked.</p> <p></p>"},{"location":"task3/#5-import-data-into-each-tab","title":"5 \u2013 Import data into each tab","text":"<p>At this point, both import tabs (<code>AliceImport</code>, <code>BobImport</code>) should display live data from their respective sheets. If not, check the URLs and click \"Allow access\".</p> <p></p>"},{"location":"task3/#6-merge-the-imported-data","title":"6 \u2013 Merge the imported data","text":"<p>Go back to your main sheet and enter the following formula in cell A2: <pre><code>=QUERY({AliceImport!A2:D; BobImport!A2:D}, \"SELECT * WHERE Col1 IS NOT NULL\", 0)\n</code></pre> This stacks the two imports and removes any blank rows.</p> <p>Tip</p> <p>Add more sources by continuing the stack: <code>{A; B; C; D; ...}</code></p> <p></p>"},{"location":"task3/#7-add-a-search-bar","title":"7 \u2013 Add a search bar","text":"<p>Choose a nearby cell (e.g. F1) and type <code>Search:</code>. In G1, the user can enter a keyword. Below that, use: <pre><code>=FILTER(A2:D, ISNUMBER(SEARCH(G1, A2:A)) + ISNUMBER(SEARCH(G1, C2:C)))\n</code></pre> This filters the merged list by title or topic.</p> <p></p>"},{"location":"task3/#8-protect-the-merged-table","title":"8 \u2013 Protect the merged table","text":"<p>Select the merged data area (e.g. A2:D). Right-click, choose <code>Protect range</code>, and limit editing permissions. This prevents accidental overwrites.</p> <p>Tip</p> <p>You can still allow edits on the search bar while locking down the core table.</p> <p></p>"},{"location":"task3/#what-youve-built","title":"What you've built","text":"<p>You've now created a live, multi-source resource index that:</p> <ul> <li>automatically updates when contributors update their sheets</li> <li>filters by keyword using a simple search bar</li> <li>protects important data from being accidentally changed</li> </ul> <p>You can expand this setup to support more contributors, add topic filters, or include a \u201ccontributor\u201d column for sorting and attribution.</p>"},{"location":"troubleshooting/","title":"Troubleshooting Guide","text":"<p>This section outlines common problems you might encounter while completing the tasks, along with possible causes and suggested fixes.</p>"},{"location":"troubleshooting/#problem-dropdown-list-not-appearing","title":"Problem: Dropdown list not appearing","text":"<p>Possible causes: - Data validation not applied to the correct column - Column was selected after entering values</p> <p>Fix: - Select the column again - Go to <code>Data &gt; Data validation</code> - Make sure \"List of items\" is selected and the values are entered correctly</p>"},{"location":"troubleshooting/#problem-ref-error-in-importrange","title":"Problem: \"#REF!\" error in <code>IMPORTRANGE</code>","text":"<p>Possible causes: - Access not granted to the source sheet - Sheet name or range is incorrect</p> <p>Fix: - Paste the <code>IMPORTRANGE</code> formula alone in any blank cell - Click \u201cAllow access\u201d when prompted - Double-check the sheet name and range (e.g. <code>Sheet1!A2:D</code>)</p>"},{"location":"troubleshooting/#problem-pie-chart-shows-wrong-categories","title":"Problem: Pie chart shows wrong categories","text":"<p>Possible causes: - Label and data ranges are mismatched - Empty or inconsistent category cells</p> <p>Fix: - Check that your label range (e.g. <code>C2:C</code>) matches your data range (e.g. <code>D2:D</code>) - Remove any blank or misspelled categories</p>"},{"location":"troubleshooting/#problem-conditional-formatting-highlights-everything","title":"Problem: Conditional formatting highlights everything","text":"<p>Possible causes: - Formula applies to the wrong range - Row references include the header</p> <p>Fix: - Make sure the formatting range starts from row 2, not row 1 - Check that your formula uses relative references (e.g., <code>B2</code> not <code>B$2</code>)</p>"},{"location":"troubleshooting/#problem-circular-dependency-error","title":"Problem: Circular dependency error","text":"<p>Possible causes: - You entered a formula in a cell that\u2019s part of the formula\u2019s own output range</p> <p>Fix: - Move the formula to a cell outside the table it\u2019s operating on - Avoid pasting formulas into the middle of dynamic data blocks</p>"},{"location":"troubleshooting/#problem-only-one-import-shows-in-merged-table","title":"Problem: Only one import shows in merged table","text":"<p>Possible causes: - One of the <code>IMPORTRANGE</code> calls has a silent error - The stacking formula is inside an area it tries to overwrite</p> <p>Fix: - Test each <code>IMPORTRANGE</code> formula individually first - Place the <code>QUERY</code> formula far below the imported ranges to avoid overlap</p>"},{"location":"troubleshooting/#problem-filter-not-working-as-expected","title":"Problem: Filter not working as expected","text":"<p>Possible causes: - Filter column contains inconsistent or misspelled values</p> <p>Fix: - Check for extra spaces or typos in the \"Status\" or \"Category\" columns - Use the dropdowns created with data validation to enforce consistency</p>"}]}